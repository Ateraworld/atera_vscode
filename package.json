{
  "name": "atera-vscode",
  "displayName": "Atera",
  "description": "The official Atera vscode extension",
  "icon": "assets/logo_4k.png",
  "version": "2.0.2",
  "author": {
    "name": "Ateraworld",
    "email": "atera.world@gmail.com",
    "url": "https://ateraworld.github.io"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/Ateraworld/atera_vscode"
  },
  "engines": {
    "vscode": "^1.79.0"
  },
  "categories": [
    "Other"
  ],
  "main": "./out/src/extension.js",
  "contributes": {
    "colors": [
      {
        "id": "atera.red",
        "description": "Red highlight color",
        "defaults": {
          "dark": "#F0335F",
          "light": "#F0335F",
          "highContrast": "errorForeground"
        }
      },
      {
        "id": "atera.blue",
        "description": "Blue highlight color",
        "defaults": {
          "dark": "#A0E1FF",
          "light": "#212D3A",
          "highContrast": "errorForeground"
        }
      }
    ],
    "snippets": [
      {
        "language": "atera",
        "path": "./syntaxes/snippets.json"
      }
    ],
    "languages": [
      {
        "id": "atera",
        "scopeName": "source.atera",
        "extensions": [
          ".txt"
        ]
      }
    ],
    "grammars": [
      {
        "path": "./syntaxes/atera.tmGrammar.injection.json",
        "scopeName": "source.atera.injection",
        "injectTo": [
          "source.json",
          "source.dart",
          "source.ts"
        ]
      },
      {
        "language": "atera",
        "scopeName": "source.atera",
        "path": "./syntaxes/atera.tmGrammar.json"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "relation-provider.removeRelationItem",
          "when": "false"
        },
        {
          "command": "relation-provider.addLocation",
          "when": "false"
        }
      ],
      "view/title": [
        {
          "command": "relation-provider.addStorageImages",
          "when": "view == relation-provider",
          "group": "navigation"
        },
        {
          "command": "relation-provider.listActivities",
          "when": "view ==  relation-provider",
          "group": "navigation"
        },
        {
          "command": "relation-provider.refresh",
          "when": "view == relation-provider",
          "group": "navigation"
        },
        {
          "command": "commands-provider.refresh",
          "when": "view == commands-provider",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "relation-provider.addPoint",
          "when": "view == relation-provider && viewItem == points",
          "group": "inline"
        },
        {
          "command": "relation-provider.removeRelationItem",
          "when": "view == relation-provider && (viewItem == point-instance || viewItem == image-instance || viewItem == section-instance || viewItem == tag-instance)",
          "group": "inline"
        },
        {
          "command": "relation-provider.addImage",
          "when": "view == relation-provider && viewItem == images",
          "group": "inline"
        },
        {
          "command": "relation-provider.addSection",
          "when": "view == relation-provider && viewItem == sections",
          "group": "inline"
        },
        {
          "command": "relation-provider.addTag",
          "when": "view == relation-provider && viewItem == tags",
          "group": "inline"
        }
      ]
    },
    "views": {
      "atera": [
        {
          "id": "relation-provider",
          "name": "Relation",
          "icon": "",
          "contextualTitle": "Atera"
        },
        {
          "id": "commands-provider",
          "name": "Commands",
          "icon": "terminal-cmd",
          "contextualTitle": "Atera"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "atera",
          "title": "Atera",
          "icon": "assets/logo.svg"
        }
      ]
    },
    "commands": [
      {
        "command": "relation-provider.addStorageImages",
        "title": "Atera: Add Storage Images",
        "icon": "$(database)"
      },
      {
        "command": "commands-provider.executeCustomCmd",
        "title": "Atera: Execute Custom Cmd",
        "icon": "$(list-tree)"
      },
      {
        "command": "relation-provider.listActivities",
        "title": "Atera: List Activities",
        "icon": "$(list-tree)"
      },
      {
        "command": "relation-provider.addLocation",
        "title": "Atera: Add Location",
        "icon": "$(edit)"
      },
      {
        "command": "relation-provider.addTag",
        "title": "Atera: Add Tag",
        "icon": "$(diff-added)"
      },
      {
        "command": "relation-provider.addSymbol",
        "title": "Atera: Add Symbol",
        "icon": "$(insert)"
      },
      {
        "command": "relation-provider.refresh",
        "title": "Atera: Refresh Relation Editor",
        "icon": "$(refresh)"
      },
      {
        "command": "commands-provider.refresh",
        "title": "Atera: Refresh Commands",
        "icon": "$(refresh)"
      },
      {
        "command": "relation-provider.addPoint",
        "title": "Atera: Add Interest Point",
        "icon": "$(diff-added)"
      },
      {
        "command": "relation-provider.removeRelationItem",
        "title": "Atera: Remove Relation Item",
        "icon": "$(remove)"
      },
      {
        "command": "relation-provider.addSection",
        "title": "Atera: Add Relation Section",
        "icon": "$(diff-added)"
      },
      {
        "command": "relation-provider.addImage",
        "title": "Atera: Add Image",
        "icon": "$(diff-added)"
      },
      {
        "command": "relation-provider.addMark",
        "title": "Atera: Add Mark",
        "icon": "$(insert)"
      }
    ],
    "activationEvents": [
      "onView:relation-provider",
      "onView:command-provider"
    ],
    "configuration": {
      "title": "Atera",
      "properties": {
        "atera.dataRoot": {
          "type": "string",
          "default": "",
          "markdownDescription": "The **root** folder of the SDK data.\n\nIf specified, allows more advanced utilities such as graphical selection of activities references in relations and more."
        },
        "atera.sdkRoot": {
          "type": "string",
          "default": "",
          "markdownDescription": "The **root** folder of the SDK executable bin.\n\nIf specified, allows to execute custom commands directly in the SDK folder, preventing _not found exception_ in case of not set global env variable."
        },
        "atera.commands": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "markdownDescription": "Specify here custom commands that will be show in the UI of the relation editor.\n\nCommands are defined in the form \n`{ \"name\": string, \"description\": string | undefined, \"cmd\": string, \"icon\": string | undefined, \"requires_sdk\": boolean = true}`\nThe `requires_sdk` field will prevent the command to move into the SDK folder before running the actual command when the **sdkRoot** setting is set.\n\nThe **cmd** field defines the actual command to be excuted and supports _wildcards_, available are:   \n- `${activity}`: the current activity folder name\n- `${storage}`: the current activity storage folder absolute path\n- `${activity_id}`: the current activity id\n- `${folder}`: the current activity root folder\n- `${sdk}`: the sdk root folder if set, `empty` otherwise\n- `${data}`: the data root folder if set, `empty` otherwise."
        }
      }
    }
  },
  "scripts": {
    "compile": "tsc && tsc-alias -p tsconfig.json",
    "watch": "tsc -watch -p ./",
    "lint": "eslint src --ext ts",
    "build": "npm run clean && npm run compile",
    "clean": "if exist out rmdir /s /q out",
    "bundle": "npm run build && vsce package"
  },
  "files": [
    "out/**/*"
  ],
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/node": "^20.3.1",
    "@types/uuid": "^9.0.2",
    "@types/vscode": "^1.79.1",
    "@typescript-eslint/eslint-plugin": "^5.59.11",
    "@typescript-eslint/parser": "^5.59.11",
    "esbuild": "^0.17.19",
    "eslint": "^8.42.0",
    "glob": "^8.1.0",
    "tsc-alias": "^1.8.6",
    "tsconfig-paths": "^4.2.0"
  }
}